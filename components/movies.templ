package components

import (
	"urdb/model"
	"fmt"
)

templ Movies(movies []model.MovieInfo) {
	for _, movie := range movies {
		@MovieCard(movie)
		<div class="divider"></div>
	}
}

templ MoviesDiv(components ...templ.Component) {
	<div id="movies" class="grid grid-cols-1 p-3">
		for _, component := range components {
			@component
		}
	</div>
}

templ MovieCard(movie model.MovieInfo) {
	<div class="card">
		<div class="card-body">
			<h2
 				class="card-title"
 				hx-get={ fmt.Sprintf("/movie/%d/info", movie.ID) }
 				hx-trigger="click"
 				hx-indicator="#header-indicator"
 				hx-target="#content"
			>
				{ fmt.Sprintf("%s (%d)", movie.Title, movie.Year) }
			</h2>
			<p>{ movie.Brief }</p>
			<div class="card-actions justify-end">
				for _, genre := range movie.Genres {
					<div class="badge badge-outline">{ genre }</div>
				}
				<div class={ "badge", ratingClass(movie.Rating) }>
					{ fmt.Sprintf("%.1f*", movie.Rating) }
				</div>
			</div>
		</div>
	</div>
}

func ratingClass(rating float64) string {
	if rating >= 4.0 {
		return "badge-success"
	} else if rating >= 2.7 {
		return "badge-warning"
	} else {
		return "badge-error"
	}
}

templ More(more bool, limit, offset int) {
	if !more {
		<p class="text-center">That's all folks!</p>
	} else {
		@moreButton(limit, offset)
	}
}

templ moreButton(limit, offset int) {
	<button
 		class={
			"btn btn-accent",
			"rounded-badge",
			"justify-self-center",
			"w-min", "my-3",
		}
 		hx-get={ fmt.Sprintf("/latestMovies?limit=%d&offset=%d", limit, offset) }
 		hx-trigger="click"
 		hx-swap="outerHTML"
 		hx-indicator="#movies-loading-indicator"
 		hx-disable-elt="this"
	>
		More!
	</button>
}

templ MoviesLoadingIndicator() {
	<div id="movies-loading-indicator" class="htmx-indicator justify-self-center">
		<span class="loading loading-infinity loading-lg"></span>
	</div>
}

templ SearchBar() {
	<div class="p-3">
		<input
 			class={
				"input",
				"input-bordered",
				"input-accent",
				"w-full",
			}
 			name="q"
 			hx-get="/searchMovies"
 			hx-trigger="keyup changed delay:500ms"
 			hx-target="#movies"
 			hx-swap="outerHTML"
 			hx-indicator="#header-indicator"
 			hx-disable-elt="this"
 			placeholder="Search..."
		/>
	</div>
}

templ Movie(movie model.Movie) {
	<div class="card">
		<h2
 			class="text-2xl font-bold"
		>
			{ fmt.Sprintf("%s (%d)", movie.Title, movie.Year) }
			<span class="float-right">
				{ fmt.Sprintf("%.1f ‚≠ê", movie.Rating) }
			</span>
		</h2>
		<p class="py-6">{ movie.Description }</p>
		<table>
			<colgroup>
				<col class="w-1/6"/>
				<col/>
			</colgroup>
			if movie.Director != nil {
				<tr>
					<td>Director:</td>
					<td>{ movie.Director.Name }</td>
				</tr>
			}
			if movie.Writer != nil {
				<tr>
					<td>Writer:</td>
					<td>{ movie.Writer.Name }</td>
				</tr>
			}
		</table>
		<div class="card-actions justify-end">
			for _, genre := range movie.Genres {
				<div class="badge badge-outline text-lg">{ genre }</div>
			}
		</div>
		<div class="divider"></div>
		<div class="flex justify-center">
			<button class="btn btn-accent w-1/4 mx-5">Crew</button>
			<button class="btn btn-accent w-1/4 mx-5">Reviews</button>
		</div>
	</div>
}
